#include "mbed.h"
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <string>

Serial pc(USBTX, USBRX); // tx, rx
DigitalOut led1(LED1);

char *chan[7];
int i=0;
int chNum = 0;

void fillStruct();
void parString();


struct Chan{
    int Cnfg; //(sine:0, bsin:1, trigON:2, trigOFF:3)
    int Chan; //(0-3)
    float Ampl; //pu
    int Freq;
    int Phas;
    float Dlay;
    float Ofst;
} Channel[4];

//char str[] = "Chan:1,Cnfg:1,Ampl:2.00,Freq:1800000,Phas:180,Dlay:0.001,Ofst:1.00";

char str[128];

int main(){

    while(1){
        while(pc.readable()){  
            led1 = 0;         
            pc.printf("%s\n\r", str);
            scanf("%s", str);
            parString();
            str[0] = '\0';
        }
        led1 = 1;
    }
    return (0);
}



void parString(){
    char *token = strtok(str, ":");
    
    while (token != NULL)
    {
        token = strtok(NULL, ",");
        chan[i] = token;
        i++;
        if(i==7){i=0;break;}
    }
    fillStruct();
}

void fillStruct(){
    int t = 0;

Channel[chNum].Chan = atoi(chan[0]);
        pc.printf("Channel: %i\n", Channel[chNum].Chan);
        chNum = atoi(chan[0]);
    
while(t < 7){
        
    char *var;
    char *val = chan[t];
        
    var = strtok_r(val, ":", &val);
    
        if(strcmp("Cnfg", var)==0){
            Channel[chNum].Cnfg = atoi(val);
            pc.printf("Config %i has: %i in it\n", chNum, Channel[chNum].Cnfg);
            }
        if(strcmp("Ampl", var)==0){
            Channel[chNum].Ampl = atof(val);
            pc.printf("Amplitude has: %f in it\n", Channel[chNum].Ampl);
            }
        if(strcmp("Freq", var)==0){
            Channel[chNum].Freq = atoi(val);
            pc.printf("Freq has: %i in it\n", Channel[chNum].Freq);
            }
        if(strcmp("Phas", var)==0){
            Channel[chNum].Phas = atoi(val);
            pc.printf("Phase has: %i in it\n", Channel[chNum].Phas);
            }
        if(strcmp("Dlay", var)==0){
            Channel[chNum].Dlay = atof(val);
            pc.printf("Delay has: %f in it\n", Channel[chNum].Dlay);
            }
        if(strcmp("Ofst", var)==0){
            Channel[chNum].Ofst = atof(val);
            pc.printf("Offset has: %f in it\n", Channel[chNum].Ofst);
            }
        t++;
    }
